name: 'Tests: node.js'

on: [pull_request, push]

jobs:
  engines-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install lts/* && npm install'
        with:
          node-version: 'lts/*'
      - id: set-matrix
        run: |
          echo "::set-output name=matrix::$(npx lerna list --all --parseable 2>/dev/null | xargs node -pe 'JSON.stringify(process.argv.slice(1).map(x => path.relative(__dirname, x)).map(x => x ? "./"+x : "."))')"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  engines:
    name: 'ls-engines'
    needs: [engines-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.engines-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install lts/* && npm install'
        with:
          node-version: 'lts/*'
      - run: npx ls-engines
        working-directory: ${{ matrix.package }}

  conditions:
    name: 'exports conditions'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - '17'
          - '16'

          - '16.9' # ⤓ with pattern trailers
          - '16.8' # ↥ no pattern trailers

          - '15'

          - '14.19' # ⤓ with pattern trailers
          - '14.18' # ↥ no pattern trailers

          - '14.13' # ⤓ with patterns
          - '14.12' # ↥ no patterns

          - '14.0'  # ⤓ with conditions
          - '13'    # ↥ no conditions

          - '13.7'  # ⤓ with conditions
          - '13.6'  # ↥ no conditions
          - '13.5'
          - '13.4'
          - '13.3'
          - '13.2'  # ⤓ experimental
          - '13.1'  # broken
          - '13.0'  # broken

          - '12'

          - '12.20' # ⤓ with patterns
          - '12.19' # ↥ no patterns
          - '12.18'
          - '12.17' # ⤓ with conditions
          - '12.16' # ↥ no conditions

          - '8'
          - '6'
          - '4'
          - 'iojs'
          - '0.12'
          - '0.10'
          - '0.8'
    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install lts/* && npm install'
        with:
          node-version: 'lts/*'
          before_install: 'cd packages/tests'
          after_install: 'cd ../..'
          skip-ls-check: true
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }}'
        with:
          node-version: ${{ matrix.node-version }}
          skip-install: true
          skip-ls-check: true
      - run: node packages/tests/conditions

  exports-conditions:
    name: 'exports conditions'
    needs: [conditions]
    runs-on: ubuntu-latest
    steps:
      - run: 'echo tests completed'

  matrix-skip-cli:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-matrix.outputs.requireds }}
    steps:
      - uses: ljharb/actions/node/matrix@main
        id: set-matrix
        with:
          requireds: '10.0 - 10.16'
          type: 'minors'
          envs: "[{ \"SKIP_CLI\": true }]"

  skip-cli:
    needs: [matrix-skip-cli]
    name: 'node 10 + skip CLI'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix-skip-cli.outputs.versions) }}

    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          skip-ls-check: true
      - run: SKIP_CLI=${{ matrix.envs.SKIP_CLI }} npm run tests-only
      - uses: codecov/codecov-action@v2

  skip-cli-finish:
    needs: [skip-cli]
    name: 'node 10 + skip CLI'
    runs-on: ubuntu-latest
    steps:
      - run: 'echo tests completed'

  matrix:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.set-matrix.outputs.requireds }}
      minors: ${{ steps.set-matrix.outputs.optionals }}
    steps:
      - uses: ljharb/actions/node/matrix@main
        id: set-matrix
        with:
          requireds: '10.17 || ^10.22 || >= 11'
          optionals: '10.18 || 10.19 || 10.20 || 10.21'
          type: 'minors'

  latest:
    needs: [matrix]
    name: 'latest minors'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.latest) }}

    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          skip-ls-check: true
      - run: npm run tests-only
      - uses: codecov/codecov-action@v2

  minors:
    needs: [matrix, latest]
    name: 'non-latest minors'
    continue-on-error: true
    if: ${{ !github.head_ref || !startsWith(github.head_ref, 'renovate') }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix.outputs.minors) }}

    steps:
      - uses: actions/checkout@v2
      - uses: ljharb/actions/node/install@main
        name: 'nvm install ${{ matrix.node-version }} && npm install'
        with:
          node-version: ${{ matrix.node-version }}
          skip-ls-check: true
      - run: npm run tests-only
      - uses: codecov/codecov-action@v2

  node:
    name: 'node 10+'
    needs: [engines, latest, minors]
    runs-on: ubuntu-latest
    steps:
      - run: 'echo tests completed'
